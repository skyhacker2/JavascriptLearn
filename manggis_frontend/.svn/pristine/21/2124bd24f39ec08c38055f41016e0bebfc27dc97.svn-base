// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var Property, Spine, _ref;
    Spine = require('spine');
    Property = (function(_super) {
      __extends(Property, _super);

      function Property() {
        _ref = Property.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Property.configure('Property', 'name', 'propertyType', 'basic', 'tag', 'items');

      Property.extend(Spine.Model.Ajax);

      Property.include(Spine.Model.Ajax);

      Property.setListId = function(listId) {
        return this.listId = listId;
      };

      Property.scope = function() {
        return 'lists/' + this.listId;
      };

      Property.prototype.scope = function() {
        if (this.isNew() && !this.id) {
          return this.constructor.scope();
        } else {
          return 'lists';
        }
      };

      return Property;

    })(Spine.Model);
    return Property;
  });

}).call(this);
