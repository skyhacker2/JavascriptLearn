<!DOCTYPE html>
<html>
<head>
<!-- include "../../js/inc/header.js" -->
<script>
document.write("<link rel='stylesheet' href='css/mod/template/loader-main.css' />");
</script>
</head>
<body>
<div id="design-div">
	<div id="container"></div>
</div>
<div style="width:100%;height:250px;"></div>

<!-- include "../../js/lib/yom/require/config.js" -->
<!-- include "../../js/lib/yom/require/require.js" -->
<!-- require "../../js/lib/yom/require-plugin/jsonp" -->
<!-- require "../../js/lib/yom/require-plugin/ajax" -->

<!-- require "../../js/lang/%{{_lang_}}%/common" -->
<!-- require "../../js/lang/%{{_lang_}}%/campaign" -->
<!-- include "../../js/inc/footer.js" -->

<script>
require(['bootstrap']);

var maskTimeout;

function fixHeight(){
	setTimeout(function(){
		frameElement.style.height = parent.$(document.body).outerHeight() + 'px';
	}, 200);
}
window.onload = function(){
	frameElement.style.height = parent.$(document.body).outerHeight() + 'px';
}
// 这里可能未来会有问题，需要解耦
parent.$(document).on('keydown', function(evt){
	if(evt.ctrlKey && evt.which === 83){
		parent.require('mod/campaign/edit-content-design-main').save();
		evt.preventDefault();
		return false;
	}
});

require(['rfl'], function(rfl){
	parent.require(['rfl'], function(prfl){
		rfl.pageStorage.set(prfl.pageStorage.get());    
	});
});
require(['ckeditor'], function(ckeditor){
	ckeditor.on('currentInstance', function(){
		var editor = CKEDITOR.currentInstance;
		fixHeight();
		editor && !editor.key && editor.on('key', function(){
			editor.key = true;
			fixHeight();
		});
	});

	ckeditor.on('instanceCreated', function(event){
		var editor = event.editor,
		element = editor.element,
		langFix = {
			'zh-tw': 'zh',
			'zh-hk': 'zh',
			'zh-cn': 'zh-cn',
			'en': 'en'
		};

		// fix the bug of dialog position, (maybe it's not the best way to fix it)
		editor.on('dialogShow', function(evt){
			var position = evt.data.getPosition();
			evt.data.move(position.x, parent.$(parent.document).scrollTop(), true);
		});

		editor.on('configLoaded', function(){
			editor.config.language = langFix[G.LANG];
			editor.config.allowedContent = true;
		});

		editor.on('focus', function(evt){
			if(parent.$(evt.editor.element.$).closest('.block').css('background-color') === 'rgb(0, 0, 0)'){
				parent.$(evt.editor.element.$).addClass('cke_black_focus')
			}
			parent.$('#width-tip').hide();
			parent.require(['./mod/template/edit-lock'], function(editLock){
				editLock.lock({hide: true});
			});
		});

		editor.on('blur', function(event){
			parent.require(['./mod/template/edit-lock'], function(editLock){
				editLock.unlock();
			});

			parent.require(['./mod/template/editor-man-main'], function(editorMan){
				editorMan.trigger(event.editor);
			});

			parent.$(event.editor.element.$).removeClass('cke_black_focus')
		});

		if (element.is( 'h1', 'h2', 'h3' )){
			editor.on('configLoaded', function(){
				editor.config.extraPlugins = 'ripersonalizer,rilink';
				editor.config.toolbarGroups = [
					{name: 'editing', groups: ['links', 'cleanup']},
					{name: 'undo' },
					{name: 'styles'},
					{name: 'colors'},
					{name: 'tools'},
					{name: 'ri'}
				];
			});
		}

		if(element.is( 'div' )){
			editor.on('configLoaded', function() {
				editor.config.extraPlugins = 'ripersonalizer,rilink';
				editor.config.removePlugins = 'image,flash,smiley';
				editor.config.toolbarGroups = [
					{name: 'editing', groups: [ 'basicstyles', 'links', 'cleanup' ]},
					{name: 'undo'},
					{name: 'clipboard'},
					{name: 'colors'},
					{name: 'tools'},
					'/',
					{name: 'align'},
					{name: 'styles'},
					{name: 'others'},
					{name: 'ri'}
				];
			});
		}
	});
});
</script>
</body>
</html>